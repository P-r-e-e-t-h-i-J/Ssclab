9. Design, develop and implement a C/C++/Java program to implement page replacement algorithms LRU
and FIFO. Assume suitable input required to demonstrate the results.
#include<stdio.h>
int n,f;
int in[100];
int p[50];
int hit=0;
int i,j,k;
int pgfaultcnt=0;
void getData()
{
printf("\n Enter length of page reference sequence:");
scanf("%d",&n);
printf("\n Enter the page reference sequence:\n");
for(i=0;i<n;i++)
scanf("%d",&in[i]);
printf("\nEnter no.of frames:");
scanf("%d",&f);
}
void initialize()
{
pgfaultcnt=0;
for(i=0;i<f;i++)
p[i]=9999;
}
int isHit(int data)
{
hit=0;
for(j=0;j<f;j++)
{
if(p[j]==data)
{
hit=1;
break;
}
}
return hit;
}
void dispPages()
{
for(k=0;k<f;k++)
{
if(p[k]!=9999)
printf("%d ",p[k]);

}
}
void dispPgFaultCnt()
{
printf("\nTotal no. of pagefaults:%d",pgfaultcnt);
}

void fifo()
{
int j=0;
initialize();
for(i=0;i<n;i++)
{
printf("\nPage%d:",in[i]);
if(isHit(in[i])==0)
{
p[j++]=in[i];
pgfaultcnt++;
dispPages();
if(j==f)
j=0;
}
else
printf("No. pagefault");

}
dispPgFaultCnt();
}
void lru()
{
initialize();
int least[50];
for(i=0;i<n;i++)
{
printf("\nPage%d:",in[i]);
if(isHit(in[i])==0)
{
for(j=0;j<f;j++)
{
int pg=p[j];
int found=0;
for(k=i-1;k>=0;k--)
{
if(pg==in[k])
{
least[j]=k;
found=1;
break;
}
else
found=0;

}
if(!found)
least[j]=-9999;

}
int min=9999;
int repindex;
for(j=0;j<f;j++)

{
if(least[j]<min)
{
min=least[j];
repindex=j;
}
}
p[repindex]=in[i];
pgfaultcnt++;
dispPages();
}
else
printf("No. pagefault!");

}
dispPgFaultCnt();

}
int main()
{
int choice;
while(1)
{
printf("\nPage Replacement Algorithms\n1.Enter data\n2.FIFO\n3.LRU\n4.Exit\nEnter your
choice:");
scanf("%d",&choice);
switch(choice)
{
case 1:
getData();
break;
case 2:
fifo();
break;
case 3:
lru();
break;
default:
return 0;
break;

}
}
}
OUTPUT
RUN 1
[root@localhost pgms]# cc 9.c
[root@localhost pgms]# ./a.out
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:1

Enter length of page reference sequence:5
Enter the page reference sequence:
1 2 3 4 5
Enter no.of frames:2
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:2
Page1:1
Page2:1 2
Page3:3 2
Page4:3 4
Page5:5 4
Total no. of pagefaults:5
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:3
Page1:1
Page2:1 2
Page3:3 2
Page4:3 4
Page5:5 4
Total no. of pagefaults:5
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:4
RUN 2
[root@localhost pgms]# ./a.out
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:1
Enter length of page reference sequence:15
Enter the page reference sequence:
0 1 2 3 0 1 2 3 0 1 2 3 4 5 6 7
Enter no.of frames:
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:^Z

[4]+ Stopped ./a.out
[root@localhost pgms]# ./a.out
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:1
Enter length of page reference sequence:16
Enter the page reference sequence:
0 1 2 3 0 1 2 3 0 1 2 3 4 5 6 7
Enter no.of frames:3
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:1
Enter length of page reference sequence:16
Enter the page reference sequence:
0 1 2 3 0 1 2 3 0 1 2 3 4 5 6 7
Enter no.of frames:3
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:2
Page0:0
Page1:0 1
Page2:0 1 2
Page3:3 1 2
Page0:3 0 2
Page1:3 0 1
Page2:2 0 1
Page3:2 3 1
Page0:2 3 0
Page1:1 3 0
Page2:1 2 0
Page3:1 2 3
Page4:4 2 3
Page5:4 5 3
Page6:4 5 6
Page7:7 5 6
Total no. of pagefaults:16
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:3
Page0:0

Page1:0 1
Page2:0 1 2
Page3:3 1 2
Page0:3 0 2
Page1:3 0 1
Page2:2 0 1
Page3:2 3 1
Page0:2 3 0
Page1:1 3 0
Page2:1 2 0
Page3:1 2 3
Page4:4 2 3
Page5:4 5 3
Page6:4 5 6
Page7:7 5 6
Total no. of pagefaults:16
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:4
RUN 3
[root@localhost pgms]# ./a.out
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:1
Enter length of page reference sequence:16
Enter the page reference sequence:
0 1 2 3 0 1 2 3 0 1 2 3 4 5 6 7
Enter no.of frames:3
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:2
Page0:0
Page1:0 1
Page2:0 1 2
Page3:3 1 2
Page0:3 0 2
Page1:3 0 1
Page2:2 0 1
Page3:2 3 1
Page0:2 3 0
Page1:1 3 0
Page2:1 2 0
Page3:1 2 3

Page4:4 2 3
Page5:4 5 3
Page6:4 5 6
Page7:7 5 6
Total no. of pagefaults:16
Page Replacement Algorithms
1.Enter data
2.FIFO
3.LRU
4.Exit
Enter your choice:4
